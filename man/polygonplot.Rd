% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygonplot.R
\name{polygonplot}
\alias{polygonplot}
\title{Draw polygon plot}
\usage{
polygonplot(
  dataframe,
  shape,
  extra = 0.5,
  fillcolor = "black",
  alpha = 0.5,
  linecolor = "black",
  linetype = "solid",
  lwd = 0.8,
  labels_axis = NULL,
  title = NULL,
  fix_aspect_ratio = TRUE
)
}
\arguments{
\item{dataframe}{data.frame containing numeric values.}

\item{shape}{integer value to specify the shape of the polygon (3=Triangle,
4=Square, 5=Pentagon, 6=Hexagon)}

\item{extra}{axis range extension}

\item{fillcolor}{fill color of the polygon}

\item{alpha}{alpha value of the fill color}

\item{linecolor}{line color of the polygon border}

\item{linetype}{line type of the polygon border}

\item{lwd}{line width of the polygon border}

\item{labels_axis}{vector with the desired labels of the axis}

\item{title}{title of the plot}

\item{fix_aspect_ratio}{Boolean flag to fix the aspect ratio of the plot as
\code{1}. It is strongly recommended to leave it as default value \code{TRUE}. NOTE: If you are
going to change the theme of the returned ggplot object, remember to put in
the \code{theme} function the following code \code{aspect.ratio = 1} in order to
keep the text and the relative ticks aligned on the axis.}
}
\value{
A \code{ggplot2} object.
}
\description{
Draw polygon plot
}
\examples{
df <- data.frame(
  info=c("axis_min", "axis_max", "data", ""),
  data1=c(-300, 500, 300, 350),
  data2=c(4, 14, -2, 12),
  data3=c(0, 1000, 10, 50),
  data4=c(0, 50, 20, 40)
)

p <- polygonplot(df, shape=4, fillcolor = "dodgerblue", linecolor = "blue")
p 

}
